# Use this to build the images that will go out to prod.
# This can also be used to bring up the services locally for QA testing.

# Commands to push:
#   docker compose -f docker-compose.build.yaml build --no-cache
#   docker tag mpjovanovich/raffle-tracker-api:latest ghcr.io/mpjovanovich/raffle-tracker-api:$(git rev-parse --short HEAD)
#   docker tag mpjovanovich/raffle-tracker-web:latest ghcr.io/mpjovanovich/raffle-tracker-web:$(git rev-parse --short HEAD)
#   docker push ghcr.io/mpjovanovich/raffle-tracker-api:$(git rev-parse --short HEAD)
#   docker push ghcr.io/mpjovanovich/raffle-tracker-web:$(git rev-parse --short HEAD)

# On server:
#   update .env.prod with the new version numbers
#   docker compose -f docker-compose.release.yaml up -d
services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile.build
    ports:
      - '3001:3001'
    env_file:
      - .env
    volumes:
      - db_data:/app/api/data
    image: mpjovanovich/raffle-tracker-api:latest
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: web/Dockerfile.build
    ports:
      - '3000:3000'
    env_file:
      - .env
    image: mpjovanovich/raffle-tracker-web:latest
    networks:
      - app-network
    depends_on:
      - api

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge
