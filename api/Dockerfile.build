# ========================================
# BUILD STAGE
# ========================================
FROM node:22-alpine AS builder

# Install sqlite3 for build stage
RUN apk add --no-cache sqlite

# Set working directory
WORKDIR /app

# Copy all (dockerignore handles filtering)
COPY . .

# Install all dependencies (including dev dependencies)
RUN npm ci

# Generate Prisma client
RUN npm run prisma:generate -w api

# Build all workspaces (order matters)
RUN npm run build -w config
RUN npm run build -w auth
RUN npm run build -w dto
RUN npm run build -w api

# ========================================
# PRODUCTION STAGE
# ========================================
FROM node:22-alpine AS production

# Install sqlite3 for production
RUN apk add --no-cache sqlite

# Create app user; don't let docker run as root user
RUN addgroup -g 1001 -S raffle-api
RUN adduser -S raffle-api -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY api/package*.json ./api/
COPY auth/package*.json ./auth/
COPY config/package*.json ./config/
COPY dto/package*.json ./dto/

# Copy node_modules for project and workspace dependencies
COPY --from=builder --chown=raffle-api:raffle-api /app/node_modules ./node_modules

# Copy built application from builder stage
COPY --from=builder --chown=raffle-api:raffle-api /app/api/dist ./api/dist
COPY --from=builder --chown=raffle-api:raffle-api /app/api/scripts ./api/scripts
COPY --from=builder --chown=raffle-api:raffle-api /app/api/prisma ./api/prisma

# Copy built workspace dependencies
COPY --from=builder --chown=raffle-api:raffle-api /app/auth/dist ./auth/dist
COPY --from=builder --chown=raffle-api:raffle-api /app/config/dist ./config/dist
COPY --from=builder --chown=raffle-api:raffle-api /app/dto/dist ./dto/dist

# Copy package.json for all workspaces
COPY --from=builder --chown=raffle-api:raffle-api /app/auth/package.json ./auth/package.json
COPY --from=builder --chown=raffle-api:raffle-api /app/config/package.json ./config/package.json
COPY --from=builder --chown=raffle-api:raffle-api /app/dto/package.json ./dto/package.json

# Switch to api directory
WORKDIR /app/api

# Make scripts executable
RUN chmod +x scripts/db-init-prod.sh

# Switch to non-root user
USER raffle-api

# Expose port
EXPOSE 3001

# Start the application
CMD ["npm", "run", "start:prod"]